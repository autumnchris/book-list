(()=>{"use strict";var __webpack_modules__={445:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('\n// EXTERNAL MODULE: ./src/images/background-image.jpg\nvar background_image = __webpack_require__(808);\n;// CONCATENATED MODULE: ./src/modules/reading-list.js\nvar ReadingList = function () {\n  function renderReadingListArray(readingList) {\n    if (readingList) {\n      renderReadingListContent(readingList);\n      localStorage.setItem(\'readingList\', JSON.stringify(readingList));\n    }\n\n    return JSON.parse(localStorage.getItem(\'readingList\')) || [];\n  }\n\n  function renderReadingListContent(readingList) {\n    if (readingList.length === 0) {\n      document.querySelector(\'.reading-list-content\').innerHTML = "<p class=\\"message info-message\\"><span class=\\"fa fa-info-circle fa-lg fa-fw\\"></span> You currently have no books in your reading list. Click the Add Book button to get started.</p>";\n    } else {\n      document.querySelector(\'.reading-list-content\').innerHTML = readingList.sort(function (a, b) {\n        return a.titleValue.toLowerCase().localeCompare(b.titleValue.toLowerCase());\n      }).map(function (book, index) {\n        return "<div class=\\"book-card\\">\\n          <div class=\\"row\\">\\n            <div class=\\"title\\">".concat(book.titleValue, "</div>\\n            <button type=\\"button\\" class=\\"button delete-book-button\\" data-index=\\"").concat(index, "\\" aria-label=\\"delete book\\" title=\\"Delete\\">\\n              <span class=\\"fa fa-trash-alt fa-sm delete-icon\\"></span>\\n            </button>\\n          </div>\\n          <div class=\\"row\\">\\n            <div class=\\"book-info author\\"><span class=\\"book-info-label\\">by</span> ").concat(book.authorValue, "</div>\\n            <div class=\\"book-info pages\\"><span class=\\"book-info-label\\">Pages</span> ").concat(book.pagesValue, "</div>\\n            <form>\\n              <div class=\\"form-group\\">\\n                <label class=\\"check-label\\" for=\\"read-").concat(index, "\\">Read\\n                  <input type=\\"checkbox\\" data-index=\\"").concat(index, "\\" name=\\"readValue\\" tabindex=\\"-1\\" id=\\"read-").concat(index, "\\" ").concat(book.readValue ? \'checked\' : \'\', " />\\n                  <span class=\\"checkmark\\" tabindex=\\"0\\"></span>\\n                </label>\\n              </div>\\n            </form>\\n          </div>\\n        </div>");\n      }).join(\'\');\n    }\n  }\n\n  function deleteBook(event, readingList) {\n    if (confirm(\'Are you sure you want to remove this book from your reading list?\')) {\n      readingList.splice(event.target.dataset.index, 1);\n      renderReadingListArray(readingList);\n    }\n  }\n\n  function toggleRead(event, readingList) {\n    if (!event.target.matches(\'input[type=checkbox]\')) return;\n    readingList[event.target.dataset.index].readValue = !readingList[event.target.dataset.index].readValue;\n    renderReadingListArray(readingList);\n  }\n\n  return {\n    renderReadingListArray: renderReadingListArray,\n    renderReadingListContent: renderReadingListContent,\n    deleteBook: deleteBook,\n    toggleRead: toggleRead\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./src/modules/book-form-modal.js\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\n\n\nvar BookFormModal = function () {\n  var formInputValues = {\n    titleValue: \'\',\n    authorValue: \'\',\n    pagesValue: \'\',\n    readValue: false\n  };\n\n  var Book = function Book(titleValue, authorValue, pagesValue, readValue) {\n    _classCallCheck(this, Book);\n\n    this.titleValue = titleValue;\n    this.authorValue = authorValue;\n    this.pagesValue = pagesValue;\n    this.readValue = readValue;\n  };\n\n  function handleChange(event) {\n    var value = event.target.type === \'checkbox\' ? event.target.checked : event.target.value;\n    formInputValues[event.target.name] = value;\n  }\n\n  function addNewBook(event, titleValue, authorValue, pagesValue, readValue, readingList) {\n    event.preventDefault();\n    removeFormErrorMessage();\n    var newBook = new Book(titleValue, authorValue, pagesValue, readValue);\n\n    if (!titleValue) {\n      renderFormErrorMessage(\'A book title is required to add a new book.\');\n    } else if (!authorValue) {\n      renderFormErrorMessage(\'An author is required to add a new book.\');\n    } else if (!pagesValue) {\n      renderFormErrorMessage(\'The number of pages is required to add a new book.\');\n    } else if (isNaN(pagesValue) || pagesValue < 0) {\n      renderFormErrorMessage(\'The number of pages must be a number greater than 0.\');\n    } else {\n      readingList.push(newBook);\n      closeBookFormModal();\n      ReadingList.renderReadingListArray(readingList);\n      formInputValues = {\n        titleValue: \'\',\n        authorValue: \'\',\n        pagesValue: \'\',\n        readValue: false\n      };\n    }\n  }\n\n  function openBookFormModal() {\n    var bookFormModal = document.createElement(\'div\');\n    bookFormModal.classList.add(\'modal\');\n    bookFormModal.setAttribute(\'id\', \'modal\');\n    bookFormModal.innerHTML = "<div class=\\"modal-content\\">\\n      <div class=\\"modal-header\\">Add New Book</div>\\n      <div class=\\"modal-body\\">\\n        <form class=\\"new-book-form\\">\\n          <div class=\\"form-group\\">\\n            <label for=\\"title-value\\">Title</label>\\n            <input type=\\"text\\" class=\\"title-value\\" name=\\"titleValue\\" value=\\"".concat(formInputValues.titleValue, "\\" id=\\"title-value\\" required />\\n          </div>\\n          <div class=\\"form-group\\">\\n            <label for=\\"author-value\\">Author</label>\\n            <input type=\\"text\\" class=\\"author-value\\" name=\\"authorValue\\" value=\\"").concat(formInputValues.authorValue, "\\" id=\\"author-value\\" required />\\n          </div>\\n          <div class=\\"form-group\\">\\n            <label for=\\"pages-value\\">Number of Pages</label>\\n            <input type=\\"text\\" class=\\"pages-value\\" name=\\"pagesValue\\" value=\\"").concat(formInputValues.pagesValue, "\\" id=\\"pages-value\\" required />\\n          </div>\\n          <div class=\\"form-group\\">\\n              <label class=\\"check-label\\" for=\\"read-value\\">Read\\n                <input type=\\"checkbox\\" name=\\"readValue\\" tabindex=\\"-1\\" id=\\"read-value\\" ").concat(formInputValues.readValue ? \'checked\' : \'\', " />\\n                <span class=\\"checkmark\\" tabindex=\\"0\\"></span>\\n              </label>\\n            </div>\\n          <div class=\\"button-group\\">\\n            <input type=\\"submit\\" class=\\"button modal-button\\" value=\\"Add\\" />\\n            <input type=\\"button\\" class=\\"button modal-button cancel\\" value=\\"Cancel\\" />\\n          </div>\\n        </form>\\n      </div>\\n    </div>");\n    document.querySelector(\'main\').appendChild(bookFormModal);\n  }\n\n  function closeBookFormModal() {\n    var bookFormModal = document.getElementById(\'modal\');\n    bookFormModal ? document.querySelector(\'main\').removeChild(bookFormModal) : null;\n  }\n\n  function renderFormErrorMessage(messageText) {\n    var errorMessage = document.createElement(\'p\');\n    errorMessage.classList.add(\'message\', \'error-message\');\n    errorMessage.innerHTML = "<span class=\\"fa fa-exclamation-circle fa-lg fa-fw\\"></span> ".concat(messageText);\n    document.querySelector(\'.modal-body\').appendChild(errorMessage);\n  }\n\n  function removeFormErrorMessage() {\n    var errorMessage = document.querySelector(\'.modal-body .error-message\');\n    errorMessage ? document.querySelector(\'.modal-body\').removeChild(errorMessage) : null;\n  }\n\n  return {\n    handleChange: handleChange,\n    addNewBook: addNewBook,\n    openBookFormModal: openBookFormModal,\n    closeBookFormModal: closeBookFormModal\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./src/modules/app.js\n\n\n\n\nvar App = function () {\n  function renderApp() {\n    document.getElementById(\'app\').innerHTML = "\\n    <header>\\n      <div class=\\"bg-image\\" style=\\"background-image: url(".concat(background_image, ")\\"></div>\\n      <h1>Build Your Reading List</h1>\\n    </header>\\n    <main>\\n      <div class=\\"reading-list-container\\">\\n        <div class=\\"col sidebar\\">\\n          <button type=\\"button\\" class=\\"button add-book-button\\"><span class=\\"fas fa-plus\\"></span> Add Book</button>\\n        </div>\\n        <div class=\\"col reading-list-content\\"></div>\\n      </div>\\n    </main>\\n    <footer>Created by <a href=\\"https://autumnbullard-portfolio.herokuapp.com\\" target=\\"_blank\\">Autumn Bullard</a> &copy; ").concat(new Date().getFullYear(), "</footer>");\n    ReadingList.renderReadingListContent(ReadingList.renderReadingListArray());\n    document.addEventListener(\'click\', function (event) {\n      var element = event.target;\n      element.matches(\'.add-book-button\') ? BookFormModal.openBookFormModal() : null;\n      element.matches(\'#modal .cancel\') ? BookFormModal.closeBookFormModal() : null;\n      element.matches(\'#modal\') ? BookFormModal.closeBookFormModal() : null;\n      element.matches(\'.new-book-form .form-group input[type=checkbox]\') ? BookFormModal.handleChange(event) : null;\n      element.matches(\'.delete-book-button\') ? ReadingList.deleteBook(event, ReadingList.renderReadingListArray()) : null;\n      element.matches(\'.book-card input[type=checkbox]\') ? ReadingList.toggleRead(event, ReadingList.renderReadingListArray()) : null;\n    });\n    document.addEventListener(\'keyup\', function () {\n      var element = event.target;\n      element.matches(\'.new-book-form .form-group input[type=text]\') ? BookFormModal.handleChange(event) : null;\n    });\n    document.addEventListener(\'submit\', function (event) {\n      var element = event.target;\n      element.matches(\'.new-book-form\') ? BookFormModal.addNewBook(event, document.getElementById(\'title-value\').value, document.getElementById(\'author-value\').value, document.getElementById(\'pages-value\').value, document.getElementById(\'read-value\').checked, ReadingList.renderReadingListArray()) : null;\n    });\n  }\n\n  return {\n    renderApp: renderApp\n  };\n}();\n\n\n;// CONCATENATED MODULE: ./node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./src/index.html\n/* harmony default export */ const cjsname_name_ext_src = (__webpack_require__.p + "index.html");\n;// CONCATENATED MODULE: ./node_modules/file-loader/dist/cjs.js?name=[name].[ext]!./src/favicon.ico\n/* harmony default export */ const favicon = (__webpack_require__.p + "favicon.ico");\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\nApp.renderApp();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///445\n')},808:(e,c,n)=>{e.exports=n.p+"assets/b433f9d3f3d21c4d77cd.jpg"}},__webpack_module_cache__={};function __webpack_require__(e){var c=__webpack_module_cache__[e];if(void 0!==c)return c.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var e;__webpack_require__.g.importScripts&&(e=__webpack_require__.g.location+"");var c=__webpack_require__.g.document;if(!e&&c&&(c.currentScript&&(e=c.currentScript.src),!e)){var n=c.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),__webpack_require__.p=e})();var __webpack_exports__=__webpack_require__(445)})();